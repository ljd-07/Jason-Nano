yolo 가상환경 만들기

uname -a
wget https://github.com/Archiconda/build-tools/releases/download/0.2.3/Archiconda3-0.2.3-Linux-aarch64.sh
sudo chmod 755 Archiconda3-0.2.3-Linux-aarch64.sh


 ./Archiconda3-0.2.3-Linux-aarch64.sh 

실행 중 선택하라고 나온다.
설치 프로그램 진행 방법 ./Archiconda3-0.2.3-Linux-aarch64.sh 실행이미 실행 중인 상태이므로 바로 
다음 단계로 넘어갑니다. 라이선스 스크롤링라이선스 텍스트를 모두 읽거나 빠르게 넘기고 싶다면 [q] 키를 누르세요.
텍스트가 모두 표시될 때까지 Enter 키를 계속 누를 수도 있습니다. 설치 경로 지정 및 설치 완료설치 경로를 입력하라는 
메시지가 나타납니다. 기본 경로를 사용하려면 [Enter] 키를 눌러 계속하세요. 환경 변수 설정설치가 완료되면 터미널에서 
conda 명령을 사용하기 위해 다음과 같이 .bashrc에 경로를 추가하세요.
yes---> enter ---> yes in your /home/ldh/.bashrc ? [yes|no] [no] >>> yes

import cv2

# 동영상 파일 경로
video_path = 'your_video_file.mp4'

# 얼굴 검출기 로드 (Haar Cascades 사용)
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# 동영상 파일 열기
cap = cv2.VideoCapture(video_path)

while True:
    # 동영상에서 프레임 읽기
    ret, frame = cap.read()

    # 프레임이 없으면 종료
    if not ret:
        break

    # 얼굴 검출을 위한 그레이스케일 변환
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # 얼굴 감지
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)

    # 감지된 얼굴 주위에 사각형 그리기
    for (x, y, w, h) in faces:
        cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)

    # 결과 출력
    cv2.imshow('Face Detection', frame)

    # 'q' 키를 누르면 종료
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# 동영상 파일 닫기
cap.release()
cv2.destroyAllWindows()
